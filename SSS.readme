Project: SSS - Smart Skill Support

Description:
SSS (Smart Skill Support) is a multimodal application which can curate the uploaded content based on user’s selected skill/role and deliver role based learning content which aids in creating personalised learning paths, resources and modules based on user’s selected skill/role. 
This application can also support in automating the upskilling or skill training for onboarded resources by curating content based on the user’s skill/role.

Installation:
1. Install dependencies:
   pip install -r requirements.txt
   ```
2. Command to run the project
```flask run

Dependencies:
The following libraries are used in this project:

| Library | Version |
|---------|---------|
| flask | 3.0.3 |
| langchain-core | 0.3.28 |
| langchain-text-splitter | 0.3.4 |
| Keras | 3.7.0 |
| openai-whisper | 20240930 |
| opencv-python | 4.10.0.84 |
| openpyxl | 3.1.5 |
| pdf2image | 1.17.0 |
| Pillow | 11.0.0 |
| pydub | 0.25.1 |
| pytesseract | 0.3.13 |
| python | 3.11.1 |
| python-docx | 1.1.2 |
| python-dotenv | 1.0.1 |
| qdrant-client | 1.12.1 |
| regex | 2024.11.6 |
| scikit-learn | 1.5.2 |
| sentence-transformers | 3.3.1 |
| spacy | 3.8.2 |
| speechrecognition | 3.11.0 |
| tensorflow | 2.18.0 |
| torch | 2.5.1 |
| torchaudio | 2.5.1 |
| torchvision | 0.20.1 |
| transformers | 4.47.1 |

Usage:
1.	Select the role, model and the type of filter required
2.	Upload files and start the processing
3.	Based on the roles user will get 2 files for each media file uploaded ( one normal transcript and another content curated file
4.	Click on q-drant button to navigate to Qdrant chatbot
5.	Now user can ask queries and get responses for the same
6.	The excel files with keywords data are present in the git link provided


Provide contact information for issues or inquiries:
- Email: 2022ac05034@wilp.bits-pilani.ac.in
- GitHub: Deepakj98-98


